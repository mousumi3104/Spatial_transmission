scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
Rt_threshold <- data.frame(time = data_estimated_rt$time, Rt = rep(1,length(data_estimated_rt$time)))
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt))+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),line_width =0.8)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.8)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.8,linetype="dashed")+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.8)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.6)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue3", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.6)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.6)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50% CI of Rt_national", "95% CI of Rt_national"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
estimated_Rt_national$country <- "National"
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt,linetype = "National"),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.6)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50% CI of Rt_national", "95% CI of Rt_national"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt,linetype = "National"),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.6)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50% CI of Rt_national", "95% CI of Rt_national"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
scale_linetype_manual(name = NULL, values = c("National" = "solid")) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right")  +
guides(fill=guide_legend(ncol=1))
plot(p)
p <- ggplot()+
geom_ribbon(data = quant_Rt_national, aes(x=time, ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = melted_Rt_region,aes(x=time,y=Rt,color = region),linewidth =0.6)+
geom_line(data = estimated_Rt_national, aes(x=time, y = Rt,linetype = "National"),color="midnightblue", linewidth = 1)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt),linewidth =0.6)+
labs(x = "", y= " Estimated Rt")+
scale_x_date(date_breaks = "4 weeks", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50% CI of Rt_national", "95% CI of Rt_national"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue3", 0.25))) +
scale_color_manual(name = "region", values = region_colors) +
scale_linetype_manual(name = NULL, values = c("National" = "solid")) +
ggtitle("Estimated Rt")+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "right",
legend.title = element_text(size = 14),      # Increase legend title size
legend.text = element_text(size = 12),       # Increase legend text size
legend.key.size = unit(1.5, "cm")) +         # Increase legend key size
guides(fill=guide_legend(ncol=1))
plot(p)
ggsave(filename = paste0("figures/national_region_rt.png"), plot = combined_plot, width=8, height=8, units="in")
ggsave(filename = paste0("figures/national_region_rt.png"), plot = p, width=8, height=8, units="in")
ggsave(filename = paste0("figures/national_region_rt.png"), plot = p, width=12, height=8, units="in")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
View(out$Rt)
View(out)
estimated_rt <- out$Rt
data_estimated_rt <- data.frame(Rt = colMeans(estimated_rt),
Rt_min_1 = colQuantiles(estimated_rt,prob=0.025),
Rt_max_1 = colQuantiles(estimated_rt,prob=0.975),
Rt_min_2 = colQuantiles(estimated_rt,prob=0.25),
Rt_max_2 = colQuantiles(estimated_rt,prob=0.75),
time = complete_dates)
estimated_deaths <-  out$weekly_deaths
data_estimated_death <- data.frame(estimated_deaths = colMeans(estimated_deaths),
death_min_1 = colQuantiles(estimated_deaths,prob=0.025),
death_max_1 = colQuantiles(estimated_deaths,prob=0.975),
death_min_2 = colQuantiles(estimated_deaths,prob=0.25),
death_max_2 = colQuantiles(estimated_deaths,prob=0.75),
reported_death = death_regions[,i],
week = mondays)
result <- make_plots(data_estimated_rt, data_estimated_death,region)
for (i in 1:M_regions){
stan_data <- list(final_time=final_time,
W = week,
initial_seeding_day=initial_seeding_day,
data_length =len_data,
death=death_regions[,i],
SI=si,
f=f,
pop=pop[i],
day_week_index = day_week_index,
fitting_start = fitting_start)     # this is the ifr for uk from the code of swapnil's nature npi
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
# Example in R using rstan
fit = rstan::sampling(
object=m,
data=stan_data,
iter=100,
warmup=80,
chains=2,
thin=1,
seed=1234,
control = list(adapt_delta = 0.9, max_treedepth = 12))     # adapt_delta controls acceptance probability (lower -> larger step size, higher acceptance rate, less time, less explored posterior distribution
# opposite for tigher adapt_delta)
# default adapt_delta=0.80, max.treedepth = 10                                                              # max_treedepth is for time efficiency concern (higher -> more time)
out <- rstan::extract(fit)
complete_dates <- seq.Date(inf_start_date, end_date, by = "day")
mondays <- complete_dates[weekdays(complete_dates) == "Monday"]
day <- length(complete_dates)
week <- length(mondays)
region <- region_name[i]
estimated_rt <- out$Rt
data_estimated_rt <- data.frame(Rt = colMeans(estimated_rt),
Rt_min_1 = colQuantiles(estimated_rt,prob=0.025),
Rt_max_1 = colQuantiles(estimated_rt,prob=0.975),
Rt_min_2 = colQuantiles(estimated_rt,prob=0.25),
Rt_max_2 = colQuantiles(estimated_rt,prob=0.75),
time = complete_dates)
estimated_deaths <-  out$weekly_deaths
data_estimated_death <- data.frame(estimated_deaths = colMeans(estimated_deaths),
death_min_1 = colQuantiles(estimated_deaths,prob=0.025),
death_max_1 = colQuantiles(estimated_deaths,prob=0.975),
death_min_2 = colQuantiles(estimated_deaths,prob=0.25),
death_max_2 = colQuantiles(estimated_deaths,prob=0.75),
reported_death = death_regions[,i],
week = mondays)
result <- make_plots(data_estimated_rt, data_estimated_death,region)
}
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
data_estimated_death <- data.frame(estimated_deaths = colMeans(estimated_deaths),
death_min_1 = colQuantiles(estimated_deaths,prob=0.025),
death_max_1 = colQuantiles(estimated_deaths,prob=0.975),
death_min_2 = colQuantiles(estimated_deaths,prob=0.25),
death_max_2 = colQuantiles(estimated_deaths,prob=0.75),
reported_death = death_regions[,i],
week = mondays)
View(data_estimated_death)
data_Rt_95 <- data.frame(time = data_estimated_rt$time, Rt_min = data_estimated_rt$Rt_min_1,
Rt_max = data_estimated_rt$Rt_max_1, key = rep("nintyfive", length(data_estimated_rt$time)))
data_Rt_50 <- data.frame(time = data_estimated_rt$time, Rt_min = data_estimated_rt$Rt_min_2,
Rt_max = data_estimated_rt$Rt_max_2, key = rep("fifty", length(data_estimated_rt$time)))
data_death_95 <- data.frame(time = data_estimated_death$week, death_min = data_estimated_death$death_min_1,
death_max = data_estimated_death$death_max_1, key = rep("nintyfive", length(data_estimated_death$week)))
data_death_50 <- data.frame(time = data_estimated_death$week, death_min = data_estimated_death$death_min_2,
death_max = data_estimated_death$death_max_2, key = rep("fifty", length(data_estimated_death$week)))
data_Rt <- rbind(data_Rt_95, data_Rt_50)
levels(data_Rt$key) <- c("ninetyfive", "fifty")
data_death <- rbind(data_death_95, data_death_50)
levels(data_death$key) <- c("ninetyfive", "fifty")
Rt_threshold <- data.frame(time = data_estimated_rt$time, Rt = rep(1,length(data_estimated_rt$time)))
p1 <- ggplot(data_estimated_rt)+
geom_ribbon(data = data_Rt, aes(x=time,ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = data_estimated_rt, aes(x=time,y=Rt),color = "black",linewidth=0.8)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt))+
xlab("")+
ylab("Estimated Rt")+
scale_x_date(date_breaks = "4 week", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue4", 0.25))) +
ggtitle(paste(region,"region"))+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
p2 <-ggplot(data_estimated_death)+
geom_ribbon(data = data_death, aes(x=time, ymin = death_min, ymax = death_max, fill=key))+
geom_point(data = data_estimated_death, aes(x=week,y=reported_death),color = "coral",size =2)+
geom_line(data = data_estimated_death, aes(x=week,y=estimated_deaths),color = "black",linewidth=0.8)+
xlab("")+
ylab("Weekly reported deaths")+
scale_x_date(date_breaks = "4 week", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue4", 0.25))) +
scale_shape_manual(values = 16)+
ggtitle(paste(region,"region"))+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
return(plot_grid(p1,p2,ncol=1,nrow=2,rel_heights = c(1,1)))
filename = paste0("figures/",region,"_separate.png")
result <- make_plots(data_estimated_rt, data_estimated_death,region)
make_plots(data_estimated_rt, data_estimated_death,region)
class(data_estimated_rt)
make_plots <- function(data_estimated_rt, data_estimated_death,region){
print(data_estimated_death)
data_Rt_95 <- data.frame(time = data_estimated_rt$time, Rt_min = data_estimated_rt$Rt_min_1,
Rt_max = data_estimated_rt$Rt_max_1, key = rep("nintyfive", length(data_estimated_rt$time)))
data_Rt_50 <- data.frame(time = data_estimated_rt$time, Rt_min = data_estimated_rt$Rt_min_2,
Rt_max = data_estimated_rt$Rt_max_2, key = rep("fifty", length(data_estimated_rt$time)))
data_death_95 <- data.frame(time = data_estimated_death$week, death_min = data_estimated_death$death_min_1,
death_max = data_estimated_death$death_max_1, key = rep("nintyfive", length(data_estimated_death$week)))
data_death_50 <- data.frame(time = data_estimated_death$week, death_min = data_estimated_death$death_min_2,
death_max = data_estimated_death$death_max_2, key = rep("fifty", length(data_estimated_death$week)))
data_Rt <- rbind(data_Rt_95, data_Rt_50)
levels(data_Rt$key) <- c("ninetyfive", "fifty")
data_death <- rbind(data_death_95, data_death_50)
levels(data_death$key) <- c("ninetyfive", "fifty")
Rt_threshold <- data.frame(time = data_estimated_rt$time, Rt = rep(1,length(data_estimated_rt$time)))
p1 <- ggplot(data_estimated_rt)+
geom_ribbon(data = data_Rt, aes(x=time,ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = data_estimated_rt, aes(x=time,y=Rt),color = "black",linewidth=0.8)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt))+
xlab("")+
ylab("Estimated Rt")+
scale_x_date(date_breaks = "4 week", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue4", 0.25))) +
ggtitle(paste(region,"region"))+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
p2 <-ggplot(data_estimated_death)+
geom_ribbon(data = data_death, aes(x=time, ymin = death_min, ymax = death_max, fill=key))+
geom_point(data = data_estimated_death, aes(x=week,y=reported_death),color = "coral",size =2)+
geom_line(data = data_estimated_death, aes(x=week,y=estimated_deaths),color = "black",linewidth=0.8)+
xlab("")+
ylab("Weekly reported deaths")+
scale_x_date(date_breaks = "4 week", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue4", 0.25))) +
scale_shape_manual(values = 16)+
ggtitle(paste(region,"region"))+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
return(plot_grid(p1,p2,ncol=1,nrow=2,rel_heights = c(1,1)))
filename = paste0("figures/",region,"_separate.png")
ggsave(filename, plot = p, width = 8, height = 8, units = "in")
}
make_plots(data_estimated_rt, data_estimated_death,region)
make_plots <- function(data_estimated_rt, data_estimated_death,region){
print(data_estimated_death)
data_Rt_95 <- data.frame(time = data_estimated_rt$time, Rt_min = data_estimated_rt$Rt_min_1,
Rt_max = data_estimated_rt$Rt_max_1, key = rep("nintyfive", length(data_estimated_rt$time)))
data_Rt_50 <- data.frame(time = data_estimated_rt$time, Rt_min = data_estimated_rt$Rt_min_2,
Rt_max = data_estimated_rt$Rt_max_2, key = rep("fifty", length(data_estimated_rt$time)))
data_death_95 <- data.frame(time = data_estimated_death$week, death_min = data_estimated_death$death_min_1,
death_max = data_estimated_death$death_max_1, key = rep("nintyfive", length(data_estimated_death$week)))
data_death_50 <- data.frame(time = data_estimated_death$week, death_min = data_estimated_death$death_min_2,
death_max = data_estimated_death$death_max_2, key = rep("fifty", length(data_estimated_death$week)))
data_Rt <- rbind(data_Rt_95, data_Rt_50)
levels(data_Rt$key) <- c("ninetyfive", "fifty")
data_death <- rbind(data_death_95, data_death_50)
levels(data_death$key) <- c("ninetyfive", "fifty")
Rt_threshold <- data.frame(time = data_estimated_rt$time, Rt = rep(1,length(data_estimated_rt$time)))
p1 <- ggplot(data_estimated_rt)+
geom_ribbon(data = data_Rt, aes(x=time,ymin = Rt_min, ymax = Rt_max, fill=key))+
geom_line(data = data_estimated_rt, aes(x=time,y=Rt),color = "black",linewidth=0.8)+
geom_line(data = Rt_threshold, aes(x=time, y = Rt))+
xlab("")+
ylab("Estimated Rt")+
scale_x_date(date_breaks = "4 week", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue4", 0.25))) +
ggtitle(paste(region,"region"))+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
p2 <-ggplot(data_estimated_death)+
geom_ribbon(data = data_death, aes(x=time, ymin = death_min, ymax = death_max, fill=key))+
geom_point(data = data_estimated_death, aes(x=week,y=reported_death),color = "coral",size =2)+
geom_line(data = data_estimated_death, aes(x=week,y=estimated_deaths),color = "black",linewidth=0.8)+
xlab("")+
ylab("Weekly reported deaths")+
scale_x_date(date_breaks = "4 week", labels = date_format("%d %b"))+
scale_fill_manual(name = "", labels = c("50%", "95%"),
values = c(alpha("deepskyblue4", 0.35),
alpha("deepskyblue4", 0.25))) +
scale_shape_manual(values = 16)+
ggtitle(paste(region,"region"))+
theme_pubr(base_family="sans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_text(size = 14),
legend.position = "None")  +
guides(fill=guide_legend(ncol=1))
p <- plot_grid(p1,p2,ncol=1,nrow=2,rel_heights = c(1,1))
filename = paste0("figures/",region,"_separate.png")
ggsave(filename, plot = p, width = 8, height = 8, units = "in")
}
make_plots(data_estimated_rt, data_estimated_death,region)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
library(data.table)
library(lubridate)
library(gdata)
library(dplyr)
library(tidyr)
library(EnvStats)
library(scales)
library(stringr)
library(abind)
library(scales)
library(bayesplot)
library(ggplot2)
library(cowplot)
library(ISOweek)
library(matrixStats)
library(ggpubr)
library(this.path)
script_directory <- this.path::this.dir()
setwd(script_directory)
#----------------------------------- data ------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------
load("results/region_fitting.Rdata")
out <- rstan::extract(fit)
a <- summary(fit)
View(a)
View(a$summary)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
a <- summary(fit)
View(a$summary)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/fitting_regions_separate.R", echo=TRUE)
cmdstanr::install_cmdstan()
install.packages("pak")
pak::pak("nfidd/nfidd", dependencies = "all", upgrade = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
library("nfidd")
pak::pak("nfidd/nfidd", dependencies = "all", upgrade = TRUE)
library("nfidd")
instll.packages("nfidd")
install.packages("nfidd")
