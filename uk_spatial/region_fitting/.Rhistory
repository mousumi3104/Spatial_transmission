library(ggrepel)
library(bayesplot)
library(rstanarm)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/mobility/uk_ltla_mobility_matrix.Rdata")
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/population/final_pop_2020_ltla.Rdata")
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
death_data <- death_data %>% select(all_of(pop_2020$area_name))
death_data_length = nrow(death_data)
#death_data = death_data %>% mutate_all(~ replace(.,. == 0,1))
ltla_names <- colnames(mob_matrix_norm)
pop_2020 <- pop_2020 %>% arrange(match(area_name,ltla_names))
M_regions <- length(ltla_names)            #number of commercial area
pop <- pop_2020$population
C <- mob_matrix_norm
# # # # serial interval and infection to onset distribution # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
start_date <- as.Date("2019-12-30")
first_lockdown_start <- as.Date("2020-03-23")
first_lockdown_end <- as.Date("2020-05-10")
second_lockdown_start <- as.Date("2020-11-05")
second_lockdown_end <- as.Date("2020-12-02")
end_date <- as.Date("2020-12-31")
dates <- seq.Date(start_date, end_date, by="day")
monday_indices <- which(weekdays(dates) == "Monday")
final_time <- as.numeric(difftime(end_date, start_date, units = "days"))
first_lockdown_start_time <- as.numeric(difftime(first_lockdown_start, start_date, units = "days"))
first_lockdown_end_time <- as.numeric(difftime(first_lockdown_end, start_date, units = "days"))
second_lockdown_start_time <- as.numeric(difftime(second_lockdown_start, start_date, units = "days"))
second_lockdown_end_time <- as.numeric(difftime(second_lockdown_end, start_date, units = "days"))
SI <- rep(0,final_time)
SI[1] = integrate(function(x) dgamma(x,shape=6.5, rate=0.62), lower=0, upper=1.5)$value
for (i in 2:final_time){
SI[i] <- integrate(function(x) dgamma(x,shape=6.5, rate=0.62), lower=i-0.5, upper=i+0.5)$value
}
mean1 <- 5.1; cv1 <- 0.86
x1 <- rgammaAlt(1e6,mean1,cv1)
f <- rep(0,final_time)
f_cached2 <- ecdf(x1)
convolution <- function(u) (f_cached2(u))
f[1] = (convolution(1.5) - convolution(0))
for(i in 2:final_time) {
f[i] = (convolution(i+.5) - convolution(i-.5))
}
seed_time <- 5          # time of days for initial seeding
init_seed <- rep(4,M_regions)         #initial seeding
#seeding_index <- which(pop_2020$area_name %in% c("Hackney, Westminster and City of London"))
View(death_data)
# Example in R using rstan
m <- rstan::stan_model(file=("~/OneDrive - National University of Singapore/Uk_mobility_data/code/fitting_death.stan"))
# Example in R using rstan
m <- rstan::stan_model(file=("~/OneDrive - National University of Singapore/Uk_mobility_data/code/fitting_death.stan"))
fit = rstan::sampling(
object=m,
data=stan_data,
iter=4000,
warmup=2000,
chains=1,
thin=1,
control = list(adapt_delta = 0.99, max_treedepth = 15))
# Example in R using rstan
m <- rstan::stan_model(file=("~/OneDrive - National University of Singapore/Uk_mobility_data/code/fitting_death.stan"))
fit = rstan::sampling(
object=m,
data=stan_data,
iter=4000,
warmup=2000,
chains=1,
thin=1,
control = list(adapt_delta = 0.99, max_treedepth = 15))
# Example in R using rstan
m <- rstan::stan_model(file=("~/OneDrive - National University of Singapore/Uk_mobility_data/code/fitting_death.stan"))
fit = rstan::sampling(
object=m,
data=stan_data,
iter=4000,
warmup=2000,
chains=1,
thin=1,
control = list(adapt_delta = 0.99, max_treedepth = 15))
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/uk_mobility_data/Code/fitting_death.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/uk_mobility_data/Code/fitting_death.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/scrap.R", echo=TRUE)
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
#seeding_index <- which(pop_2020$area_name %in% c("Hackney, Westminster and City of London"))
#init_seed[seeding_index] <- 7
#seeding_index <- which(pop_2020$area_name %in% c("Manchester"))
#init_seed[seeding_index] <- 3
Rt_region <- array(1, dim=c(final_time, M_regions))
mobility <- 1;
stan_data <- list(M_regions = M_regions,
final_time = final_time,
Rt_region= Rt_region,
seed_time = seed_time,
init_seed = init_seed,
SI=SI,
f=f,
C=C,
pop=pop_2020$population)
options(mc.cores = parallel::detectCores())
rstan_options(threads_per_chain = 1)#auto_write = FALSE)
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
stan_data <- list(M_regions = M_regions,
final_time = final_time,
Rt_regions= Rt_region,
seed_time = seed_time,
init_seed = init_seed,
SI=SI,
f=f,
C=C,
pop=pop_2020$population,ifr=1)
options(mc.cores = parallel::detectCores())
rstan_options(threads_per_chain = 1)#auto_write = FALSE)
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
Rt_region <- array(1.5, dim=c(final_time, M_regions))
mobility <- 1;
stan_data <- list(M_regions = M_regions,
final_time = final_time,
Rt_regions= Rt_region,
seed_time = seed_time,
init_seed = init_seed,
SI=SI,
f=f,
C=C,
pop=pop_2020$population,ifr=1)
options(mc.cores = parallel::detectCores())
rstan_options(threads_per_chain = 1)#auto_write = FALSE)
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
simulation = rstan::sampling(object=m,data=stan_data, iter=1,
chains=1, thin=1, algorithm = "Fixed_param")
y_sim <- rstan::extract(simulation)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Uk_mobility_data/Code/simulation_cases.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
install.packages("odin")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_seir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
# plotting data
p_sir <- df_sir_out %>%
ggplot(aes(x = t, color = name)) +
geom_line(aes(y=S, color="S"), alpha = 0.95) +
geom_line(aes(y=I, color="I"), alpha = 0.95) +
geom_line(aes(y=R, color="R"), alpha = 0.95) +
scale_colour_discrete(limits = c("S", "I", "R")) +
xlab("Time") +
ylab("Total number of Individuals\n") +
labs(color="Compartment") +
theme_classic(base_size = 20) +
theme(legend.justification = 0, legend.position = c(0, 0.55))
p_sir
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
# plotting data
p_sir <- df_sir_out %>%
ggplot(aes(x = t, color = name)) +
geom_line(aes(y=S, color="S"), alpha = 0.95) +
geom_line(aes(y=I, color="I"), alpha = 0.95) +
geom_line(aes(y=R, color="R"), alpha = 0.95) +
geom_vline(xintercept = change_time, linetype = "dashed", color = "grey", size = 1.5)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
phi <- user(0.005)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
View(death_data)
histogram(death_data[,1])
hist(death_data[,1])
hist(as.numeric(death_data[,1]))
library(stringr)
library(abind)
library(scales)
library(zoo)
library(matrixStats)
library(optparse)
library(ggplot2)
library(ggstance)
library(ggrepel)
library(bayesplot)
library(rstanarm)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/mobility/uk_ltla_mobility_matrix.Rdata")
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/population/final_pop_2020_ltla.Rdata")
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
death_data <- death_data %>% select(all_of(pop_2020$area_name))
death_data_length = nrow(death_data)
#death_data = death_data %>% mutate_all(~ replace(.,. == 0,1))
ltla_names <- colnames(mob_matrix_norm)
pop_2020 <- pop_2020 %>% arrange(match(area_name,ltla_names))
M_regions <- length(ltla_names)            #number of commercial area
pop <- pop_2020$population
C <- mob_matrix_norm
hist(death_data[,1])
hist(as.numeric(death_data[,1]))
death_data[, 1]
a <- death_data$Hartlepool
hist(a)
hist(a)
hist(matrix.flattened_matrix(death_data))
hist(matrix.flatten(death_data))
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (1).R", echo=TRUE)
install.packages("COVID")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (1).R", echo=TRUE)
install.packages("COVID19")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (1).R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (2).R", echo=TRUE)
par(1,1)
par(mfrow(1,1)
)
par(mfrow = c(1,1))
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/uk_mobility_data/Code/fitting_death.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (2).R", echo=TRUE)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
a <- death_data[,1]
hist(a)
hist(as.numeric(a))
a <- as.vector(death_data)
View(a)
as.matrix(death_data)
as.matrix(death_data)a <-
a <- as.matrix(death_data)
library(cmdstanr)
library(data.table)
library(lubridate)
library(gdata)
library(dplyr)
library(tidyr)
library(EnvStats)
library(scales)
library(stringr)
library(abind)
library(scales)
library(bayesplot)
library(ggplot2)
library(ISOweek)
library(this.path)
library(ISOweek)
#
script_directory <- this.path::this.dir()
setwd(script_directory)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Newport","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington","West Midlands",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
library(cmdstanr)
library(data.table)
library(lubridate)
library(gdata)
library(dplyr)
library(tidyr)
library(EnvStats)
library(scales)
library(stringr)
library(abind)
library(scales)
library(bayesplot)
library(ggplot2)
library(ISOweek)
library(this.path)
library(ISOweek)
#
script_directory <- this.path::this.dir()
setwd(script_directory)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Newport","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington","West Midlands",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
load("data/final_pop_2020_ltla.Rdata")
load("data/england_death_2020.Rdata")       ## weekly data
load("data/uk_regions_mobility_matrix.Rdata")
View(pop_2020)
mobility_change$sub_region_1
unique(mobility_change$sub_region_1)
View(mobility_change)
View(mobility_change)
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
mobility_change <- mobility_change %>% select(-c("county_region_code","sub_region_2","metro_area","iso_3166_2_code","cencus_fips_code","place_id"))
mobility_change <- mobility_change %>% select(-c("country_region_code","sub_region_2","metro_area","iso_3166_2_code","cencus_fips_code","place_id"))
mobility_change <- mobility_change %>% select(-c("country_region_code","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Newport","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington","West Midlands",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
unique(mobility_change$region)
unique(mobility_change$area_name[mobility_change$region =="NA"])
unique(mobility_change$area_name[mobility_change$region ==NA])
unique(mobility_change$area_name[is.na(mobility_change$region)])
a <- data.frame(area=unique(mobility_change$area_name[is.na(mobility_change$region)],region=NA)
)
View(a)
a$region <- na
a$region <- NA
a$region[a$area == "Borough of Halton"] <- "North west"
View(mobility_change)
a$region[a$area == "Borough of Halton"] <- "North west"
View(mobility_change)
View(a)
a$region[a$area == "Bristol City"] <- "South west"
a$region[a$area == "Cambridgeshire"] <- "South west"
a$region[a$area == "Cambridgeshire"] <- "East"
a$region[a$area == "Cornwall"] <- "South west"
a$region[a$area == "Essex"] <- "East"
a$region[a$area == "Gloucestershire"] <- "South west"
a$region[a$area == "Greater London"] <- "London"
a$region[a$area == "Greater Manchester"] <- "North West"
a$region[a$area == "Hampshire"] <- "South east"
a$region[a$area == "Herefordshire"] <- "West midlands"
a$region[a$area == "Hertfordshire"] <- "South east"
a$region[a$area == "Kent"] <- "South east"
a$region[a$area == "Kingston upon Hull"] <- "Yorkshire and the Humber"
a$region[a$area == "Lancashire"] <- "North west"
a$region[a$area == "Leicestershire"] <- "East midlands"
a$region[a$area == "Lincolnshire"] <- "East midlands"
a$region[a$area == "Merseyside"] <- "North west"
a$region[a$area == "Norfolk"] <- "East"
a$region[a$area == "North Yorkshire"] <- "Yorkshire and the Humber"
a$region[a$area == "Northamptonshire"] <- "East midlands"
a$region[a$area == "Nottinghamshire"] <- "East midlands"
a$region[a$area == "Oxfordshire"] <- "South east"
a$region[a$area == "Somerset"] <- "South west"
a$region[a$area == "South Yorkshire"] <- "Yorkshire and the Humber"
a$region[a$area == "Staffordshire"] <- "West midlands"
a$region[a$area == "Suffolk"] <- "East"
a$region[a$area == "Surrey"] <- "South east"
a$region[a$area == "Tyne and Wear"] <- "North east"
a$region[a$area == "Warwickshire"] <- "West midlands"
a$region[a$area == "West Sussex"] <- "South east"
a$region[a$area == "West Yorkshire"] <- "Yorkshire and the Humber"
a$region[a$area == "Worcestershire"] <- "West midlands"
colnames(a) <- c("area_name","region")
mobility_change <- merge(mobility_change, a[,c("area_name","region")], by = "area_name", all.x = TRUE)
unique(mobility_change$area_name)
unique(mobility_change$region)
unique(mobility_change$region.x)
unique(mobility_change$region.y)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
unique(mobility_change$region)
mobility_change1 <- mobility_change %>%
left_join(a, by = "area_name", suffix = c("_1", "_2")) %>%
mutate(
region = coalesce(region_1, region_2)
) %>%
select(area_name, region)
unique(mobility_change1$region)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
mobility_change <- mobility_change %>%
left_join(a, by = "area_name", suffix = c("_1", "_2")) %>%
mutate(
region = coalesce(region_1, region_2)
) %>%
select(area_name, region)
unique(mobility_change$region)
mobility_change$region <- str_to_title(tolower(mobility_change$region))
unique(mobility_change$region)
mobility_change$region <- str_to_sentence(tolower(mobility_change$region))
unique(mobility_change$region)
saveRDS("data/mobility_change.RDS")
saveRDS(mobility_change, file="data/mobility_change.RDS")
saveRDS(mobility_change, file="data/mobility_change.rds")
mobility_change111 <- readRDS("data/mobility_change.rds")
View(mobility_change)
View(mobility_change1)
View(mobility_change111)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
# mobility_change111 <- readRDS("data/mobility_change.rds")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
mobility_change <- mobility_change %>%
left_join(a, by = "area_name", suffix = c("_1", "_2")) %>%
mutate(
region = coalesce(region_1, region_2)
) %>%
select(area_name, region)
mobility_change$region <- str_to_sentence(tolower(mobility_change$region))
View(mobility_change)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
# mobility_change111 <- readRDS("data/mobility_change.rds")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
View(mobility_change)
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
# mobility_change111 <- readRDS("data/mobility_change.rds")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
mobility_change <- mobility_change %>%
left_join(a, by = "area_name", suffix = c("_1", "_2")) %>%
mutate(
region = coalesce(region_1, region_2)
) %>%
select(-region1,-region2)
#-------------- loading data -------------------------------------------------------------------------
data_google_mobility <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
# mobility_change111 <- readRDS("data/mobility_change.rds")
mobility_change <-  data_google_mobility %>% filter(sub_region_1 %in% c("Bath and North East Somerset","Bedford","Blackburn with Darwen","Blackpool","Borough of Halton","Bracknell Forest","Brighton and Hove",
"Bristol City","Buckinghamshire","Cambridgeshire", "Central Bedfordshire","Cornwall","Derby","Gloucestershire","Hartlepool","Leicester","Medway","Middlesbrough","North Yorkshire","Plymouth","Shropshire","Tyne and Wear",
"Wiltshire","York","Windsor and Maidenhead","Swindon","Stockton-on-Tees","South Yorkshire","Slough","Portsmouth","Oxfordshire","Northamptonshire","North East Lincolnshire","Merseyside","Leicestershire","Isle of Wight",
"Herefordshire","Greater London","Greater Manchester","Hertfordshire","Kent","Lincolnshire","Milton Keynes","Northumberland","Rutland","Somerset","Southampton","Stoke-on-Trent","Thurrock","Warrington",
"Wokingham","Worcestershire","West Sussex","Warwickshire","Torbay","Suffolk","Southend-on-Sea","Reading","Nottingham","North Lincolnshire","Kingston upon Hull","Dorset","Essex","Hampshire","Lancashire","Luton","Norfolk",
"North Somerset","Nottinghamshire" ,"Peterborough","Redcar and Cleveland","South Gloucestershire","Staffordshire","Surrey","West Berkshire","West Yorkshire"))
colnames(mobility_change)[colnames(mobility_change) == "sub_region_1"] <- "area_name"
mobility_change <- mobility_change %>% select(-c("country_region_code","country_region","sub_region_2","metro_area","iso_3166_2_code","census_fips_code","place_id"))
mobility_change <- merge(mobility_change, pop_2020[,c("area_name","region")], by = "area_name", all.x = TRUE)
mobility_change <- mobility_change %>%
left_join(a, by = "area_name", suffix = c("_1", "_2")) %>%
mutate(
region = coalesce(region_1, region_2)
) %>%
select(-region_1,-region_2)
mobility_change$region <- str_to_sentence(tolower(mobility_change$region))
mobility_change$date <- as.Date(mobility_change$date, format = "%Y-%m-%d")
saveRDS(mobility_change,file="data/mobility_change.rds")
mobility_change111 <- readRDS("data/mobility_change.rds")
View(mobility_change111)
saveRDS(a,file="data/area_region_map.rds")
saveRDS(mobility_change,file="data/mobility_change.rds")
mobility_change111 <- readRDS("data/mobility_change.rds")
View(mobility_change111)
unique(mobility_change111$region)
