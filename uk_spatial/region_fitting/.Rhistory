m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
stan_data <- list(M_regions = M_regions,
final_time = final_time,
Rt_regions= Rt_region,
seed_time = seed_time,
init_seed = init_seed,
SI=SI,
f=f,
C=C,
pop=pop_2020$population,ifr=1)
options(mc.cores = parallel::detectCores())
rstan_options(threads_per_chain = 1)#auto_write = FALSE)
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
Rt_region <- array(1.5, dim=c(final_time, M_regions))
mobility <- 1;
stan_data <- list(M_regions = M_regions,
final_time = final_time,
Rt_regions= Rt_region,
seed_time = seed_time,
init_seed = init_seed,
SI=SI,
f=f,
C=C,
pop=pop_2020$population,ifr=1)
options(mc.cores = parallel::detectCores())
rstan_options(threads_per_chain = 1)#auto_write = FALSE)
m <- rstan::stan_model(file="~/OneDrive - National University of Singapore/Singapore/code1/my_model/scrap.stan")
simulation = rstan::sampling(object=m,data=stan_data, iter=1,
chains=1, thin=1, algorithm = "Fixed_param")
y_sim <- rstan::extract(simulation)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Uk_mobility_data/Code/simulation_cases.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/SIR.R", echo=TRUE)
install.packages("odin")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_seir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
# plotting data
p_sir <- df_sir_out %>%
ggplot(aes(x = t, color = name)) +
geom_line(aes(y=S, color="S"), alpha = 0.95) +
geom_line(aes(y=I, color="I"), alpha = 0.95) +
geom_line(aes(y=R, color="R"), alpha = 0.95) +
scale_colour_discrete(limits = c("S", "I", "R")) +
xlab("Time") +
ylab("Total number of Individuals\n") +
labs(color="Compartment") +
theme_classic(base_size = 20) +
theme(legend.justification = 0, legend.position = c(0, 0.55))
p_sir
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
# plotting data
p_sir <- df_sir_out %>%
ggplot(aes(x = t, color = name)) +
geom_line(aes(y=S, color="S"), alpha = 0.95) +
geom_line(aes(y=I, color="I"), alpha = 0.95) +
geom_line(aes(y=R, color="R"), alpha = 0.95) +
geom_vline(xintercept = change_time, linetype = "dashed", color = "grey", size = 1.5)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
phi <- user(0.005)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/birth_death_sir.R", echo=TRUE)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
View(death_data)
histogram(death_data[,1])
hist(death_data[,1])
hist(as.numeric(death_data[,1]))
library(stringr)
library(abind)
library(scales)
library(zoo)
library(matrixStats)
library(optparse)
library(ggplot2)
library(ggstance)
library(ggrepel)
library(bayesplot)
library(rstanarm)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/mobility/uk_ltla_mobility_matrix.Rdata")
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/population/final_pop_2020_ltla.Rdata")
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
death_data <- death_data %>% select(all_of(pop_2020$area_name))
death_data_length = nrow(death_data)
#death_data = death_data %>% mutate_all(~ replace(.,. == 0,1))
ltla_names <- colnames(mob_matrix_norm)
pop_2020 <- pop_2020 %>% arrange(match(area_name,ltla_names))
M_regions <- length(ltla_names)            #number of commercial area
pop <- pop_2020$population
C <- mob_matrix_norm
hist(death_data[,1])
hist(as.numeric(death_data[,1]))
death_data[, 1]
a <- death_data$Hartlepool
hist(a)
hist(a)
hist(matrix.flattened_matrix(death_data))
hist(matrix.flatten(death_data))
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (1).R", echo=TRUE)
install.packages("COVID")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (1).R", echo=TRUE)
install.packages("COVID19")
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (1).R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (2).R", echo=TRUE)
par(1,1)
par(mfrow(1,1)
)
par(mfrow = c(1,1))
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/uk_mobility_data/Code/fitting_death.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/MIDSEA/material/example1 (2).R", echo=TRUE)
load("~/OneDrive - National University of Singapore/uk_mobility_data/data/deaths/england_death_2020.Rdata")       ## weekly data
a <- death_data[,1]
hist(a)
hist(as.numeric(a))
a <- as.vector(death_data)
View(a)
as.matrix(death_data)
as.matrix(death_data)a <-
a <- as.matrix(death_data)
jpeg("~/Desktop/compressed_image.jpg", width = 800, height = 600, quality = 85)
jpeg("~/Desktop/pic_mousumi.jpg", width = 800, height = 600, quality = 85)
image <- image_read("~/Desktop/pic_mousumi.JPG")
image <- image_read("/Users/mousumi/Desktop/pic_mousumi.JPG")
library(magick)
image <- image_read("/Users/mousumi/Desktop/pic_mousumi.JPG")
compressed_image <- image_strip(image)
image_write(compressed_image, "pic_mousumi.jpg", quality = 85)
image_write(compressed_image, "/Users/mousumi/Desktop/pic_mousumi.jpg", quality = 85)
image <- image_read("/Users/mousumi/Desktop/pic_mousumi.JPG")
compressed_image <- image_strip(image)
image <- image_read(compressed_image,"/Users/mousumi/Desktop/pic_mousumi.JPG")
image_write(compressed_image, "/Users/mousumi/Desktop/pic_mousumi.jpg", quality = 85)
image_write(compressed_image, "/Users/mousumi/Download/pic_mousumi.jpg", quality = 85)
image_write(compressed_image, "/Users/mousumi/Downloads/pic_mousumi.jpg", quality = 85)
image <- image_read(compressed_image,"/Users/mousumi/Downloads/pic_mousumi.jpg")
image <- image_read("/Users/mousumi/Downloads/pic_mousumi.jpg")
compressed_image <- image_strip(image)
image <- image_read(compressed_image,"/Users/mousumi/Downloads/pic_mousumi.jpg")
image_write(compressed_image, "/Users/mousumi/Downloads/pic_mousumi.jpg", quality = 85)
image <- image_read("/Users/mousumi/Desktop/pic_mousumi.jpg")
compressed_image <- image_strip(image)
image_write(compressed_image, "/Users/mousumi/Downloads/pic_mousumi.jpg", quality = 85)
image_write(compressed_image, "/Users/mousumi/Downloads/pic_mousumi.jpg", quality = 50)
library(cmdstanr)
library(data.table)
library(lubridate)
library(gdata)
library(dplyr)
library(tidyr)
library(EnvStats)
library(scales)
library(stringr)
library(abind)
library(scales)
library(bayesplot)
library(ggplot2)
library(ISOweek)
library(this.path)
library(readxl)
#
#
script_directory <- this.path::this.dir()
setwd(script_directory)
death_threshold = 4
setwd(script_directory)
load("data/final_pop_2020_ltla.Rdata")
load("data/england_death_2021.Rdata")
death_data <- read_excel("data/death_20_21.xlsx")
pop_2020$region <- sapply(pop_2020$region, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
pop_2020$area_name <- sapply(pop_2020$area_name, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
colnames(death_data) <- sapply(colnames(death_data), function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
death_north_east <- death_data %>% select(all_of(pop_2020$area_name[pop_2020$region == "North east"]))
death_north_east$total_death <- apply(death_north_east, 1, sum)
#--------- start date of the epidemic ----------------------------------------------------------
fitting_death_start <- which(cumsum(death_north_east$total_death) >= death_threshold )[1]       # week when cumulative death exceeds above 10
infection_gen_time <- 6
epidemic_start <- fitting_death_start - infection_gen_time
inf_start_date <- ISOweek2date(paste0(2020, "-W", sprintf("%02d", epidemic_start), "-1"))
fitting_start_date <- ISOweek2date(paste0(2020, "-W", sprintf("%02d", fitting_death_start), "-1"))
inf_end_date <- as.Date("31-01-2021",format = "%d-%m-%Y")
# week_dates <- seq.Date(inf_start_date, inf_end_date, by = "week")
final_time <- as.numeric(inf_end_date - inf_start_date) +1
#-----------------------------------------------------------------------------------------------
day_week_index <- array(0,final_time)
for (t in 1:final_time){
day_week_index[t] = ceiling(t/7) - (fitting_death_start - epidemic_start - 1)
}
day_week_index[1:((fitting_death_start-epidemic_start)*7)] = 1
week <- day_week_index[length(day_week_index)]
#------- region_pop -----------------------------------------------------------------
pop_north_east <- pop_2020 %>% filter(region == "North east")
M_regions <-nrow(pop_north_east)     # number of region
mobility_matrix_2011 <- mobility_matrix_2011 %>% select(- place_of_work)
colnames(mobility_matrix_2011) <- sapply(colnames(mobility_matrix_2011), function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
pop_2020$region <- sapply(pop_2020$region, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
pop_2020$area_name <- sapply(pop_2020$area_name, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
north_east_ltla <- pop_2020$area_name[pop_2020$region == "North east"]
ltla_index <- which(colnames(mobility_matrix_2011) %in% north_east_ltla)
C_base <- apply(as.matrix(mobility_matrix_2011[ltla_index, ltla_index]), 2, function(col) col/sum(col))
C_lockdown <- matrix(0.0001,M_regions,M_regions)
diag(C_lockdown) <- 0.9992
initial_seeding_day = 6
death_north_east <- death_north_east[epidemic_start: (epidemic_start + ceiling(final_time/7) -1 ),]   #
death_len_data <- nrow(death_north_east)
fitting_death_start <- infection_gen_time + 1
# mobility_change <- readRDS("data/mobility_change.rds")
# mobility_change <- mobility_change %>% filter(region == "North east")
# length(unique(mobility_change$area_name))
#
gmobility20 <- read.csv("data/2020_GB_Region_Mobility_Report.csv")
gmobility21 <- read.csv("data/2021_GB_Region_Mobility_Report.csv")
gmobility20$sub_region_1 <- sapply(gmobility20$sub_region_1, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility20$sub_region_2 <- sapply(gmobility20$sub_region_2, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility1 <- gmobility20 %>% filter(sub_region_1 %in% c("Hartlepool","Middlesbrough","Redcar and cleveland","Stockton-on-tees","Darlington","County durham","Northumberland"))
gmobility2 <- gmobility20 %>% filter(sub_region_2 %in% c("Metropolitan borough of gateshead","Newcastle upon tyne district","North tyneside district","South tyneside","Sunderland district"))
gmobility2 <- gmobility2 %>% mutate(sub_region_2 = case_when(sub_region_2 == "Metropolitan borough of gateshead" ~ "Gateshead",
sub_region_2 == "Newcastle upon tyne district" ~ "Newcastle upon tyne",
sub_region_2 == "North tyneside district" ~ "North tyneside",
sub_region_2 == "South tyneside" ~ "South tyneside",
sub_region_2 == "Sunderland district" ~ "Sunderland"))
gmobility2$sub_region_1 <- gmobility2$sub_region_2
gmobility <- rbind(gmobility1,gmobility2)
gmobility <- gmobility %>% select(c("sub_region_1","date","retail_and_recreation_percent_change_from_baseline","grocery_and_pharmacy_percent_change_from_baseline",
"transit_stations_percent_change_from_baseline","parks_percent_change_from_baseline","workplaces_percent_change_from_baseline","residential_percent_change_from_baseline"))
NE_ltla <- north_east_ltla
complete_dates <- seq(min(min(as.Date(gmobility$date,format = "%Y-%m-%d")),as.Date(inf_start_date, format = "%Y-%m-%d")), as.Date("2020-12-31", format= "%Y-%m-%d"), by = "day")
gm <- array(NA, dim = c(length(complete_dates), ncol(gmobility), M_regions))
for (i in 1:M_regions){               # adjustment for dates
a <- gmobility %>% filter(sub_region_1 == NE_ltla[i])
a$date <- as.Date(a$date)
missing_dates <- as.Date(setdiff(complete_dates, a$date))
if (length(missing_dates) !=0){
new_rows <- data.frame(
sub_region_1 = NE_ltla[i],
date = missing_dates,
retail_and_recreation_percent_change_from_baseline = NA,
grocery_and_pharmacy_percent_change_from_baseline = NA,
transit_stations_percent_change_from_baseline = NA,
parks_percent_change_from_baseline = NA,
workplaces_percent_change_from_baseline = NA,
residential_percent_change_from_baseline = NA,
row.names = row.names(missing_dates))
a <- rbind(a,new_rows)
a <- a[order(a$date), ]
}
gm[,,i] <- as.matrix( a %>% filter(sub_region_1 == NE_ltla[i]))
}
for (i in 1:M_regions){                  # adjustment for NA values
a <- as.matrix((gm[,3:ncol(gmobility),i]))
a <- apply(a, c(1, 2), as.numeric)
for (j in 1:ncol(a)){
if (is.na(a[1,j])){a[1,j] = 0}
if (is.na(a[length(complete_dates),j])){a[length(complete_dates),j] = a[max(which(!is.na(a[,j]))),j]}
for (k in 2:length(complete_dates)){
if (is.na(a[k,j])){
a[k,j] <- mean(c(as.numeric(a[max(which(!is.na(a[1:(k-1),j]))),j]),  as.numeric(a[(k + min(which(!is.na(a[(k+1):length(complete_dates),j])))),j])))
}
}
}
gm[,3:ncol(gmobility),i] <- a
}
gm_non_res20 <- matrix(NA, nrow = final_time, ncol = M_regions)
gm_res20 <- matrix(NA, nrow = final_time, ncol= M_regions)
for (i in 1:M_regions){
a <- data.frame(gm[,,i])
colnames(a) <- c("ltla","date","non_res1","non_res2","non_res3","non_res4","non_res","res")
a$date <- as.Date(a$date, format = "%Y-%m-%d")
a <- a %>% filter(date >= inf_start_date)
gm_non_res[,i] <- (as.numeric(a$non_res1) + as.numeric(a$non_res2) + as.numeric(a$non_res3) + as.numeric(a$non_res4) + as.numeric(a$non_res5)) /5
gm_res[,i] <- as.numeric(a$res)
}
gmobility21$sub_region_1 <- sapply(gmobility21$sub_region_1, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility21$sub_region_2 <- sapply(gmobility21$sub_region_2, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility1 <- gmobility21 %>% filter(date <= ymd(20210131)) %>% filter(sub_region_1 %in% c("Hartlepool","Middlesbrough","Redcar and cleveland","Stockton-on-tees","Darlington","County durham","Northumberland"))
gmobility2 <- gmobility21 %>% filter(sub_region_2 %in% c("Metropolitan borough of gateshead","Newcastle upon tyne district","North tyneside district","South tyneside","Sunderland district"))
gmobility2 <- gmobility2 %>% mutate(sub_region_2 = case_when(sub_region_2 == "Metropolitan borough of gateshead" ~ "Gateshead",
sub_region_2 == "Newcastle upon tyne district" ~ "Newcastle upon tyne",
sub_region_2 == "North tyneside district" ~ "North tyneside",
sub_region_2 == "South tyneside" ~ "South tyneside",
sub_region_2 == "Sunderland district" ~ "Sunderland"))
gmobility2$sub_region_1 <- gmobility2$sub_region_2
gm_non_res20 <- matrix(NA, nrow = final_time, ncol = M_regions)
gm_res20 <- matrix(NA, nrow = final_time, ncol= M_regions)
for (i in 1:M_regions){
a <- data.frame(gm[,,i])
colnames(a) <- c("ltla","date","non_res1","non_res2","non_res3","non_res4","non_res","res")
a$date <- as.Date(a$date, format = "%Y-%m-%d")
a <- a %>% filter(date >= inf_start_date)
gm_non_res20[,i] <- (as.numeric(a$non_res1) + as.numeric(a$non_res2) + as.numeric(a$non_res3) + as.numeric(a$non_res4) + as.numeric(a$non_res5)) /5
gm_res20[,i] <- as.numeric(a$res)
}
gm_non_res20 <- matrix(NA, nrow = final_time, ncol = M_regions)
gm_res20 <- matrix(NA, nrow = final_time, ncol= M_regions)
for (i in 1:M_regions){
a <- data.frame(gm[,,i])
colnames(a) <- c("ltla","date","non_res1","non_res2","non_res3","non_res4","non_res5","res")
a$date <- as.Date(a$date, format = "%Y-%m-%d")
a <- a %>% filter(date >= inf_start_date)
gm_non_res20[,i] <- (as.numeric(a$non_res1) + as.numeric(a$non_res2) + as.numeric(a$non_res3) + as.numeric(a$non_res4) + as.numeric(a$non_res5)) /5
gm_res20[,i] <- as.numeric(a$res)
}
gm_non_res20 <- matrix(NA, nrow = length(complete_dates), ncol = M_regions)
gm_res20 <- matrix(NA, nrow = length(complete_dates), ncol= M_regions)
for (i in 1:M_regions){
a <- data.frame(gm[,,i])
colnames(a) <- c("ltla","date","non_res1","non_res2","non_res3","non_res4","non_res5","res")
a$date <- as.Date(a$date, format = "%Y-%m-%d")
a <- a %>% filter(date >= inf_start_date)
gm_non_res20[,i] <- (as.numeric(a$non_res1) + as.numeric(a$non_res2) + as.numeric(a$non_res3) + as.numeric(a$non_res4) + as.numeric(a$non_res5)) /5
gm_res20[,i] <- as.numeric(a$res)
}
gmobility21$sub_region_1 <- sapply(gmobility21$sub_region_1, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility21$sub_region_2 <- sapply(gmobility21$sub_region_2, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility1 <- gmobility21 %>% filter(date <= ymd(20210131)) %>% filter(sub_region_1 %in% c("Hartlepool","Middlesbrough","Redcar and cleveland","Stockton-on-tees","Darlington","County durham","Northumberland"))
gmobility2 <- gmobility21 %>% filter(sub_region_2 %in% c("Metropolitan borough of gateshead","Newcastle upon tyne district","North tyneside district","South tyneside","Sunderland district"))
gmobility2 <- gmobility2 %>% mutate(sub_region_2 = case_when(sub_region_2 == "Metropolitan borough of gateshead" ~ "Gateshead",
sub_region_2 == "Newcastle upon tyne district" ~ "Newcastle upon tyne",
sub_region_2 == "North tyneside district" ~ "North tyneside",
sub_region_2 == "South tyneside" ~ "South tyneside",
sub_region_2 == "Sunderland district" ~ "Sunderland"))
gmobility2$sub_region_1 <- gmobility2$sub_region_2
gmobility <- rbind(gmobility1,gmobility2)
gmobility <- gmobility %>% select(c("sub_region_1","date","retail_and_recreation_percent_change_from_baseline","grocery_and_pharmacy_percent_change_from_baseline",
"transit_stations_percent_change_from_baseline","parks_percent_change_from_baseline","workplaces_percent_change_from_baseline","residential_percent_change_from_baseline"))
NE_ltla <- north_east_ltla
complete_dates <- seq(ymd(20210101),ymd(20210131), by = "day")
gm <- array(NA, dim = c(length(complete_dates), ncol(gmobility), M_regions))
for (i in 1:M_regions){               # adjustment for dates
a <- gmobility %>% filter(sub_region_1 == NE_ltla[i])
a$date <- as.Date(a$date)
missing_dates <- as.Date(setdiff(complete_dates, a$date))
if (length(missing_dates) !=0){
new_rows <- data.frame(
sub_region_1 = NE_ltla[i],
date = missing_dates,
retail_and_recreation_percent_change_from_baseline = NA,
grocery_and_pharmacy_percent_change_from_baseline = NA,
transit_stations_percent_change_from_baseline = NA,
parks_percent_change_from_baseline = NA,
workplaces_percent_change_from_baseline = NA,
residential_percent_change_from_baseline = NA,
row.names = row.names(missing_dates))
a <- rbind(a,new_rows)
a <- a[order(a$date), ]
}
gm[,,i] <- as.matrix( a %>% filter(sub_region_1 == NE_ltla[i]))
}
dim(as.matrix( a %>% filter(sub_region_1 == NE_ltla[i])))
gmobility21$sub_region_1 <- sapply(gmobility21$sub_region_1, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility21$sub_region_2 <- sapply(gmobility21$sub_region_2, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
gmobility1 <- gmobility21 %>% filter(date <= ymd(20210131)) %>% filter(sub_region_1 %in% c("Hartlepool","Middlesbrough","Redcar and cleveland","Stockton-on-tees","Darlington","County durham","Northumberland"))
gmobility2 <- gmobility21 %>% filter(date <= ymd(20210131)) %>% filter(sub_region_2 %in% c("Metropolitan borough of gateshead","Newcastle upon tyne district","North tyneside district","South tyneside","Sunderland district"))
gmobility2 <- gmobility2 %>% mutate(sub_region_2 = case_when(sub_region_2 == "Metropolitan borough of gateshead" ~ "Gateshead",
sub_region_2 == "Newcastle upon tyne district" ~ "Newcastle upon tyne",
sub_region_2 == "North tyneside district" ~ "North tyneside",
sub_region_2 == "South tyneside" ~ "South tyneside",
sub_region_2 == "Sunderland district" ~ "Sunderland"))
gmobility2$sub_region_1 <- gmobility2$sub_region_2
gmobility <- rbind(gmobility1,gmobility2)
gmobility <- gmobility %>% select(c("sub_region_1","date","retail_and_recreation_percent_change_from_baseline","grocery_and_pharmacy_percent_change_from_baseline",
"transit_stations_percent_change_from_baseline","parks_percent_change_from_baseline","workplaces_percent_change_from_baseline","residential_percent_change_from_baseline"))
NE_ltla <- north_east_ltla
complete_dates <- seq(ymd(20210101),ymd(20210131), by = "day")
gm <- array(NA, dim = c(length(complete_dates), ncol(gmobility), M_regions))
for (i in 1:M_regions){               # adjustment for dates
a <- gmobility %>% filter(sub_region_1 == NE_ltla[i])
a$date <- as.Date(a$date)
missing_dates <- as.Date(setdiff(complete_dates, a$date))
if (length(missing_dates) !=0){
new_rows <- data.frame(
sub_region_1 = NE_ltla[i],
date = missing_dates,
retail_and_recreation_percent_change_from_baseline = NA,
grocery_and_pharmacy_percent_change_from_baseline = NA,
transit_stations_percent_change_from_baseline = NA,
parks_percent_change_from_baseline = NA,
workplaces_percent_change_from_baseline = NA,
residential_percent_change_from_baseline = NA,
row.names = row.names(missing_dates))
a <- rbind(a,new_rows)
a <- a[order(a$date), ]
}
gm[,,i] <- as.matrix( a %>% filter(sub_region_1 == NE_ltla[i]))
}
for (i in 1:M_regions){                  # adjustment for NA values
a <- as.matrix((gm[,3:ncol(gmobility),i]))
a <- apply(a, c(1, 2), as.numeric)
for (j in 1:ncol(a)){
if (is.na(a[1,j])){a[1,j] = 0}
if (is.na(a[length(complete_dates),j])){a[length(complete_dates),j] = a[max(which(!is.na(a[,j]))),j]}
for (k in 2:length(complete_dates)){
if (is.na(a[k,j])){
a[k,j] <- mean(c(as.numeric(a[max(which(!is.na(a[1:(k-1),j]))),j]),  as.numeric(a[(k + min(which(!is.na(a[(k+1):length(complete_dates),j])))),j])))
}
}
}
gm[,3:ncol(gmobility),i] <- a
}
gm_non_res21 <- matrix(NA, nrow = length(complete_dates), ncol = M_regions)
gm_res21 <- matrix(NA, nrow = length(complete_dates), ncol= M_regions)
for (i in 1:M_regions){
a <- data.frame(gm[,,i])
colnames(a) <- c("ltla","date","non_res1","non_res2","non_res3","non_res4","non_res5","res")
a$date <- as.Date(a$date, format = "%Y-%m-%d")
a <- a %>% filter(date >= ymd(20210101))
gm_non_res21[,i] <- (as.numeric(a$non_res1) + as.numeric(a$non_res2) + as.numeric(a$non_res3) + as.numeric(a$non_res4 ) + as.numeric(a$non_res5)) /5
gm_res21[,i] <- as.numeric(a$res)
}
gm_non_res <- rboind(gm_non_res20, gm_non_res21)
gm_non_res <- rbind(gm_non_res20, gm_non_res21)
gm_res <- rbind(gm_res20,gm_res21)
View(gm_non_res)
M_regions <-nrow(pop_north_east)     # number of region
mobility_matrix_2011 <- mobility_matrix_2011 %>% select(- place_of_work)
load("data/uk_regions_mobility_matrix.Rdata")
e
M_regions <-nrow(pop_north_east)     # number of region
mobility_matrix_2011 <- mobility_matrix_2011 %>% select(- place_of_work)
load("data/uk_regions_mobility_matrix.Rdata")
load("data/absolute_matrix_2011.Rdata")
mobility_matrix_2011 <- mobility_matrix_2011 %>% select(- place_of_work)
View(mobility_matrix_2011)
M_regions <-nrow(pop_north_east)     # number of region
mobility_matrix_2011 <- mobility_matrix_2011 %>% select(- place_of_work)
colnames(mobility_matrix_2011) <- sapply(colnames(mobility_matrix_2011), function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
pop_2020$region <- sapply(pop_2020$region, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
pop_2020$area_name <- sapply(pop_2020$area_name, function(x){
paste0(toupper(substring(x,1,1)),tolower(substring(x,2)))})
north_east_ltla <- pop_2020$area_name[pop_2020$region == "North east"]
ltla_index <- which(colnames(mobility_matrix_2011) %in% north_east_ltla)
C_base <- apply(as.matrix(mobility_matrix_2011[ltla_index, ltla_index]), 2, function(col) col/sum(col))
View(C_base)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/region_fitting/north_east_ltla_fitting.R", echo=TRUE)
inf_end_date
lockdown1_started <- as.Date("2020-03-23", format = "%Y-%m-%d")
lockdown1_lifted <- as.Date("2020-05-10", format = "%Y-%m-%d")
lockdown2_started <- as.Date("2020-11-05", format = "%Y-%m-%d")
lockdown2_lifted <- as.Date("2020-12-02", format = "%Y-%m-%d")
lockdown_index <-  data.frame(date = seq.Date(from = inf_start_date,inf_end_date,by="day"))
lockdown_index$r_mobility_index <- rep(0,nrow(lockdown_index))
lockdown_index$r_mobility_index[lockdown_index$date >= lockdown1_started & lockdown_index$date < lockdown1_lifted] <- 1
lockdown_index$r_mobility_index[lockdown_index$date >= lockdown2_started & lockdown_index$date < lockdown2_lifted] <- 1
lockdown_index$g_mobility_index <-  rep(3,nrow(lockdown_index))
lockdown_index$g_mobility_index[lockdown_index$date < lockdown1_lifted] <- 1
lockdown_index$g_mobility_index[lockdown_index$date < lockdown1_lifted] <- 1
lockdown_index$g_mobility_index[lockdown_index$date >= lockdown1_lifted & lockdown_index$date < lockdown2_lifted] <- 2
first_lockdown_end <- which(lockdown_index$g_mobility_index == 2)[1]
second_lockdown_end <- which(lockdown_index$g_mobility_index == 3)[1]
lockdown_index$L1 <- ifelse(lockdown_index$g_mobility_index == 1,1,0)
lockdown_index$L2 <- ifelse(lockdown_index$g_mobility_index == 2,1,0)
lockdown_index$L3 <- ifelse(lockdown_index$g_mobility_index == 3,1,0)
lockdown_index <- lockdown_index %>% select(- g_mobility_index, -date)
lockdown_index <- lockdown_index[1:final_time,]
View(lockdown_index)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/region_fitting/north_east_ltla_fitting.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/region_fitting/north_east_ltla_fitting.R", echo=TRUE)
View(summary_fit_connected)
View(summary_fit_disconnected)
source("~/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/Singapore/code1/my_model/Spatial_transmission/uk_spatial/region_fitting/north_east_ltla_fitting.R", echo=TRUE)
View(summary_fit_connected)
View(summary_fit_disconnected)
